{"version":3,"sources":["context/store-context.js","reducer.js","components/Header.jsx","components/Search.jsx","components/Filters.jsx","components/Controls.jsx","actions.js","components/TodoListIem.jsx","components/EmptyList.jsx","components/TodoList.jsx","components/hoc/WithFilteredTasks.jsx","components/AddPanel.jsx","components/App.jsx","services/tasks.js","components/ErrorIndicator.jsx","components/hoc/ErrorBoundry.jsx","index.jsx"],"names":["StoreContext","React","createContext","initialState","tasks","searchReq","filter","sortTasks","important","t","done","regular","changeTask","id","type","idx","findIndex","task","newTask","slice","reducer","state","action","payload","Header","useState","actual","setActual","useEffect","length","className","Search","onSearchInput","value","setValue","placeholder","onChange","e","target","Filters","onFilterChange","classNamed","buttonType","onClick","dataset","data-filter","Controls","useContext","dispatch","req","onSearch","onFilter","TodoListItem","text","itemClass","importantClass","data-type","Arrow","EmptyList","arrow","WithFilteredTasks","Wrapped","props","filteredTasks","toLowerCase","includes","searchTasks","filterTasks","TodoList","map","key","dataType","closest","onDone","onDelete","onImportant","AddPanel","v4","document","querySelector","focus","window","scrollTo","top","behavior","App","useReducer","JSON","parse","localStorage","getItem","stringify","Provider","ErrorIndicator","ErrorBoundry","error","this","setState","children","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89556ebf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst StoreContext = React.createContext()\r\n\r\nexport default StoreContext","\r\nexport const initialState = {\r\n    tasks: [],\r\n    searchReq: '',\r\n    filter: 'all',\r\n}\r\n\r\nconst sortTasks = (tasks) => {\r\n    const important = tasks.filter(t => t.important && !t.done)\r\n    const regular = tasks.filter(t => !t.important && !t.done)\r\n    const done = tasks.filter(t => t.done)\r\n\r\n    return [\r\n        ...important,\r\n        ...regular,\r\n        ...done\r\n    ]\r\n}\r\n\r\nconst addTask = (tasks, task) => {\r\n    return sortTasks([task, ...tasks])\r\n}\r\n\r\nconst changeTask = (tasks, id, type) => {\r\n    \r\n        const idx = tasks.findIndex(t => t.id === id)\r\n        const task = tasks[idx]\r\n\r\n        if(type) {\r\n            const newTask = {\r\n                ...task,\r\n                [type]: !task[type]\r\n            }\r\n\r\n            return sortTasks([\r\n                ...tasks.slice(0, idx),\r\n                newTask,\r\n                ...tasks.slice(idx + 1)\r\n            ])\r\n        } else {\r\n            return sortTasks([\r\n                ...tasks.slice(0, idx),\r\n                ...tasks.slice(idx + 1)\r\n            ])\r\n        }\r\n}\r\n\r\nexport const reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_TASKS': \r\n            return {\r\n                ...state,\r\n                tasks: sortTasks(action.payload)\r\n            }\r\n\r\n        case 'ADD_TASK': \r\n            return {\r\n                ...state,\r\n                tasks: addTask(state.tasks, action.payload)\r\n            }\r\n        \r\n        case 'SEARCH_TASKS': \r\n            return {\r\n                ...state,\r\n                searchReq: action.payload\r\n            }\r\n\r\n        case 'FILTER_TASKS': \r\n            return {\r\n                ...state,\r\n                filter: action.payload\r\n            }\r\n\r\n        case 'DONE_TASK':\r\n            return {\r\n                ...state,\r\n                tasks: changeTask(state.tasks, action.payload, 'done')\r\n            }\r\n\r\n        case 'IMPORTANT_TASK':\r\n            return{\r\n                ...state,\r\n                tasks: changeTask(state.tasks, action.payload, 'important')\r\n            }\r\n        \r\n        case 'DELETE_TASK':\r\n            return {\r\n                ...state,\r\n                tasks: changeTask(state.tasks, action.payload)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { useState, useEffect} from 'react'\r\n\r\nconst Header = ({tasks}) => {\r\n\r\n    const [actual, setActual] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setActual(\r\n            tasks.filter(t => !t.done).length\r\n        )\r\n    }, [tasks])\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h1 className=\"header-title\">Your tasks</h1>\r\n            <div className=\"header-status\">\r\n                <div className=\"all\"><span>actual</span> <span>{actual}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import { useState, useEffect } from 'react'\r\n\r\nconst Search = ({onSearchInput}) => {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    useEffect(() => {\r\n        onSearchInput(value)\r\n    }, [value] )\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <input className=\"input search-input\" type=\"text\" placeholder=\"search\" value={value} onChange={ e => setValue(e.target.value) }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","\r\nconst Filters = ({onFilterChange, filter}) => {\r\n\r\n    const classNamed = (buttonType) => {\r\n        if(buttonType === filter) return `btn btn-${buttonType} active`\r\n        else return `btn btn-${buttonType}`\r\n    }\r\n\r\n    const onFilterClick = (e) => {\r\n        onFilterChange(e.target.dataset.filter)\r\n    }\r\n\r\n    return (\r\n        <div className=\"filters\" onClick={onFilterClick}>\r\n            <button \r\n                className={classNamed('all')} data-filter=\"all\">\r\n                <i data-filter=\"all\">all</i>\r\n            </button>\r\n            <button \r\n                className={classNamed('done')} data-filter=\"done\">\r\n                <i data-filter=\"done\" className=\"fas fa-check-circle\"></i>\r\n            </button>\r\n            <button \r\n                className={classNamed('important')} data-filter=\"important\">\r\n                <i data-filter=\"important\" className=\"fas fa-star\"></i\r\n            ></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters","import { useContext } from 'react'\r\nimport StoreContext from '../context/store-context'\r\n\r\nimport { onSearch, onFilter } from '../actions'\r\n\r\nimport Search from './Search'\r\nimport Filters from './Filters'\r\n\r\nconst Controls = () => {\r\n    const { state: {filter}, dispatch } = useContext(StoreContext)\r\n\r\n    const onSearchInput = (req) => {\r\n        dispatch(onSearch(req))\r\n    }\r\n\r\n    const onFilterChange = (filter) => {\r\n        dispatch(onFilter(filter))\r\n    }\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <Search onSearchInput={onSearchInput} />\r\n            <Filters onFilterChange={onFilterChange} filter={filter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls","import { v4 } from 'uuid'\r\n\r\nconst onFetchTasks = (tasks) => {\r\n    return {type: 'FETCH_TASKS', payload: tasks}\r\n}\r\n\r\nconst onSearch = (req) => {\r\n    return {type: 'SEARCH_TASKS', payload: req}\r\n}\r\n\r\nconst onFilter = (filter) => {\r\n    return {type: 'FILTER_TASKS', payload: filter}\r\n}\r\n\r\nconst onAdd = (text) => {\r\n    const task ={\r\n        id: v4(),\r\n        text,\r\n        important: false,\r\n        done: false\r\n    }\r\n\r\n    return {type: 'ADD_TASK', payload: task}\r\n}\r\n\r\nconst onDone = (id) => {\r\n    return {type: 'DONE_TASK', payload: id}\r\n}\r\n\r\nconst onImportant = (id) => {\r\n    return {type: 'IMPORTANT_TASK', payload: id}\r\n}\r\n\r\nconst onDelete = (id) => {\r\n    return {type: 'DELETE_TASK', payload: id}\r\n}\r\n\r\nexport {\r\n    onFetchTasks, \r\n    onSearch, \r\n    onFilter,\r\n    onAdd,\r\n    onDone,\r\n    onImportant,\r\n    onDelete,\r\n}","\r\nconst TodoListItem = ({text, done, important, id}) => {\r\n\r\n    let itemClass = \"todo-list-item\"\r\n    if(done) itemClass += ' done'\r\n    if(important) itemClass += ' important'\r\n\r\n    let importantClass = important ? 'fas fa-star' : 'far fa-star'\r\n\r\n    return (\r\n        <li className={itemClass} id={id}>\r\n            <i className=\"fas fa-star dummy\"></i>\r\n            <div className=\"text\" data-type=\"done\">\r\n                <i className=\"fas fa-check-circle\" data-type=\"done\" ></i>\r\n                <p data-type=\"done\">{text}</p>\r\n            </div>\r\n            <div className=\"item-controls\">\r\n                <button className=\"btn btn-remove\" data-type=\"delete\">\r\n                    <i className=\"fa fa-trash\" data-type=\"delete\"></i>\r\n                </button>\r\n                <button className=\"btn btn-important\" data-type=\"important\">\r\n                    <i className={importantClass} data-type=\"important\"></i>\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default TodoListItem","const Arrow = () => {\r\n    return (\r\n        <div className=\"arrow\">\r\n            <i className=\"fa fa-chevron-down\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EmptyList = ({text, arrow}) => {\r\n    return (\r\n        <div className=\"empty-list\">\r\n            <h3>{text}</h3>\r\n            {\r\n                arrow && <Arrow />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EmptyList","import { useContext } from 'react'\r\nimport StoreContext from '../context/store-context'\r\nimport WithFilteredTasks from './hoc/WithFilteredTasks'\r\n\r\nimport { onDone, onImportant, onDelete } from '../actions'\r\n\r\nimport TodoListItem from './TodoListIem'\r\nimport EmptyList from './EmptyList'\r\n\r\nconst TodoList = ({ filteredTasks, tasks }) => {\r\n\r\n    const { dispatch } = useContext(StoreContext)\r\n\r\n    const onListClick = (e) => {\r\n        if(e.target.dataset.type) {\r\n            const dataType = e.target.dataset.type \r\n\r\n            const id = e.target.closest('.todo-list-item').id\r\n\r\n            if(dataType === 'done') dispatch(onDone(id))\r\n            if(dataType === 'delete') dispatch(onDelete(id))\r\n            if(dataType === 'important') dispatch(onImportant(id))\r\n        }\r\n    }\r\n\r\n    const TodoList = filteredTasks.map(task => <TodoListItem {...task} key={task.id}/>)\r\n\r\n    return (\r\n        <ul className=\"todo-list\" onClick={onListClick}>\r\n            {\r\n                !tasks.length ? <EmptyList text={'Add new task'} arrow={true} /> \r\n                    : !filteredTasks.length ? <EmptyList text={'Nothing found'} />\r\n                    : TodoList\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default WithFilteredTasks(TodoList)","import { useContext } from 'react'\r\nimport StoreContext from '../../context/store-context'\r\n\r\nconst WithFilteredTasks = (Wrapped) => function useTasks(props)  {\r\n\r\n    const { state: {tasks, filter, searchReq} } = useContext(StoreContext)\r\n\r\n    const filterTasks = (tasks) => {\r\n        if(filter === 'all') return tasks\r\n        if(filter === 'important') return tasks.filter(t => t.important && !t.done)\r\n        return tasks.filter(task => task[filter])\r\n    }\r\n\r\n    const searchTasks = (tasks) => {\r\n        if(searchReq === '') return tasks\r\n    \r\n        return tasks.filter(task => {\r\n            if(task.text.toLowerCase()\r\n                    .includes(searchReq.toLowerCase())) {\r\n                return task\r\n            }\r\n        })\r\n    }\r\n\r\n    const filteredTasks = searchTasks(filterTasks(tasks))\r\n\r\n    return <Wrapped filteredTasks={filteredTasks} tasks={tasks} {...props}/>\r\n} \r\n\r\nexport default WithFilteredTasks","import StoreContext from '../context/store-context'\r\nimport { useState, useContext } from 'react'\r\nimport { onAdd } from '../actions'\r\n\r\nconst AddPanel = () => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const { dispatch } = useContext(StoreContext) \r\n\r\n    const addClick = () => {\r\n        if(value !== '') dispatch(onAdd(value))\r\n        setValue('')\r\n\r\n        document.querySelector('.add-input').focus()\r\n        \r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: \"smooth\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-panel\">\r\n\r\n            <div className=\"add-field\">\r\n                <input className=\"input add-input\" type=\"text\" value={value}  onChange={e => setValue(e.target.value)}/>\r\n                <button className=\"btn\" onClick={addClick}>add</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPanel","import { useReducer, useEffect } from 'react'\r\n\r\nimport StoreContext from '../context/store-context'\r\nimport { reducer, initialState } from '../reducer'\r\nimport { getTasks, setTasks } from '../services/tasks'\r\n\r\nimport '../styles/common.scss'\r\n\r\nimport Header from './Header'\r\nimport Controls from './Controls'\r\nimport TodoList from './TodoList'\r\nimport AddPanel from './AddPanel'\r\n\r\nconst App = () => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(() => {\r\n        const tasks = getTasks()\r\n        \r\n        dispatch({type: 'FETCH_TASKS', payload: tasks })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setTasks(state.tasks)\r\n\r\n    }, [state.tasks])\r\n\r\n    return (\r\n        <StoreContext.Provider value={ { state, dispatch } }>\r\n            <div className=\"wrapper-outer\">\r\n                <div className=\"wrapper\">\r\n                    <Header tasks={state.tasks}/>\r\n                    <Controls />\r\n                    <TodoList />\r\n                    <AddPanel />\r\n                </div> \r\n            </div>\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n\r\nexport default App","\r\nexport const getTasks = () => {\r\n    \r\n    return JSON.parse(localStorage.getItem('tasks')) || []\r\n}\r\n\r\nexport const setTasks = (tasks) => {\r\n    \r\n    localStorage.tasks = JSON.stringify(tasks)\r\n}\r\n\r\n","\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            \r\n            <h2>Error</h2>\r\n            <span>we have some trouble</span>\r\n            <span>try to reload</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator","import { React, Component } from 'react'\r\nimport ErrorIndicator from '../ErrorIndicator'\r\n\r\nclass ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { error } = this.state \r\n\r\n        if(error) return <ErrorIndicator />\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport ErrorBoundry from './components/hoc/ErrorBoundry'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundry>\n      <App />\n    </ErrorBoundry>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}